head
    title Welkcijfer.nl
    link(href="https://fonts.googleapis.com/css?family=Montserrat&display=swap" rel="stylesheet")

div#content_wrap
    h1#title Welkcijfer.nl

    div#login
        h1 Login met Magister:

        input#username(placeholder="Gebruikersnaam" value=(developmentMode && credentials) ? credentials.username : "")
        br
        input#password(placeholder="Wachtwoord" type="password" value=(developmentMode && credentials) ? credentials.password : "")
        br

        p#minimum_container Cijfer om te behouden:
            input#minimum(value="5,5")

        button#button(onClick="login()") Checken
        p#loading(style="display:none") laden...

    div#classes_container(style="display:none")
        h1 Cijfers
            span#class_dropdown.arrow.up(onclick="class_dropdown()")
        div#classes
                

    table#list(style="visibility: hidden")
        tr
            th Vak
            th 1
            th 2
            th 3
            th - weging

span#author Ontwikkeld door: <br/> Rein Fernhout
    a(href="https://github.com/LevitatingBusinessMan" target="_blank")
        img(src="/Github-Logo.png" width="20px")

script.
    
    const list = document.getElementById("list");
    const classes_list = document.getElementById("classes");
    const classes_container = document.getElementById("classes_container");

    let classes;
    let averages;
    let faulty = [];
    let prev_user;
    function login() {

        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;
        const minimum = document.getElementById("minimum").value;

        if(!username.length)
            return alert("Gebruikersnaam graag");

        if(!password.length)
            return alert("wachtwoord graag");

        //Don't get new classes if same user
        if (prev_user === username)
            return calculate(minimum);

        //Delete existing grades
        list.innerHTML = list.rows[0].innerHTML;
        list.style = "visibility: hidden";

        const loading = document.getElementById("loading");
        loading.style = "display: block";

        fetch("/login",{
            method: "POST",
            body: JSON.stringify({username, password, minimum}),
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(res => {
            loading.style = "display: none";

                //OK-results
                if (res.ok) {
                    res.json()
                        .then(result => {
                            classes = result.classes;
                            averages = result.averages

                            //Check if grades match averages
                            for (let nameOfClass in classes) {
                                if (averages[nameOfClass]) {

                                const grades = classes[nameOfClass];
                                let weight_count = 0;
                                let total_points = 0;

                                grades.forEach(g => {
                                    weight_count += g.weight;
                                    total_points += g.value*g.weight;
                                });

                                //Magister has a stupid way of rounding end period grades
                                if (Math.floor((total_points / weight_count) * 100)/100 != averages[nameOfClass])
                                    faulty.push(nameOfClass);
                                
                                }
                            }

                            //Show grades
                            classes_list.innerHTML = "";
                            for (className in classes) {

                                const div = document.createElement("DIV");

                                const grades = classes[className];

                                innerHTML = 

                                `
                                <span class="class_list classname ${faulty.includes(className) ? "faulty" : ""}">
                                    <p>${className.charAt(0).toUpperCase() + className.slice(1)}</p>
                                </span>
                                <span class="seperator">:</span>
                                `

                                grades.forEach(g => {
                                    innerHTML += `
                                    <span class="class_list grade_value ${faulty.includes(className) ? "faulty" : ""} ${parseFloat(g.value) >= 5.5 ? "sufficient" : "unsufficient"}">
                                        <p>${g.value}</p>
                                        <p class="grade_weight">${g.weight}</p>
                                    </span>
                                    `
                                });

                                if (faulty.includes(className)) {
                                    innerHTML += `<span class="tooltiptext left"> Cijferlijst incorrect </span>`;
                                    div.classList.add("tooltip");
                                }

                                classes_list.appendChild(div);
                                div.innerHTML = innerHTML;

                            }

                            if (arrow.classList.contains('up'))
                                classes_list.style = "display: none";
                            classes_container.style = "display: block";

                            calculate(minimum);
                            prev_user = username;
                        })
                }
                
                //non-OK results
                else {
                    if (res.status === 401) {
                        alert("Er is iets misgegaan, klopt je wachtwoord? Momenteel werkt deze site alleen voor WDZ leerlingen.")
                    } else alert("Er is iets misgegaan!")
                }
        });
    }

    function calculate(minimum_grade) {
        const results = {};

        minimum_grade = parseFloat(minimum_grade.replace(",","."));

        for (let nameOfClass in classes) {
            let grades = classes[nameOfClass];
            let total_points = 0;
            let count = 0;

            for (let i=0;i<grades.length;i++){
                if (grades[i].weight) {
                    total_points += grades[i].value * grades[i].weight;
                    count += grades[i].weight;
                }
            }

            let requiredGrade = [
                (Math.ceil(((minimum_grade * (count + 1) - total_points) / 1) *10 ) / 10).toFixed(1),
                (Math.ceil(((minimum_grade * (count + 2) - total_points) / 2) *10 ) / 10).toFixed(1),
                (Math.ceil(((minimum_grade * (count + 3) - total_points) / 3) *10 ) / 10).toFixed(1)
            ]

            requiredGrade = requiredGrade.map( g => g < 1 ? 1 : g)

            results[nameOfClass] = {
                1: requiredGrade[0],
                2: requiredGrade[1],
                3: requiredGrade[2]
            }
        }

        draw(results);
    }

    function draw(grades) {

        //Delete existing grades from table
        list.innerHTML = list.rows[0].innerHTML;

        for (gradeName in grades) {
            const grade = grades[gradeName];
            const row = list.insertRow();
            const name_cell = row.insertCell(0);
            const weight_1 = row.insertCell(1);
            const weight_2 = row.insertCell(2);
            const weight_3 = row.insertCell(3);
            
            name_cell.innerHTML = gradeName;
            weight_1.innerHTML = grade[1];
            weight_2.innerHTML = grade[2];
            weight_3.innerHTML = grade[3];

            if (faulty.includes(gradeName)) {
                row.classList.add("tooltip", "faulty")
                row.innerHTML += `<span class="tooltiptext down"> Cijferlijst incorrect </span>`
            }

            list.appendChild(row)
        }

        list.style = "visibility: visible";
    }

    const arrow = document.getElementById("class_dropdown")
    function class_dropdown() {


        if (arrow.classList.contains('up') ) {
            arrow.classList.remove("up");
            arrow.classList.add("down");
            classes_list.style = "display: block";
        } else {
            arrow.classList.remove("down");
            arrow.classList.add("up");
            classes_list.style = "display: none";
        }

    }

style
    include ../includes/style.css
    include ../includes/tooltip.css